import { Degree, EclipticCoordinates, EquatorialCoordinates, Equinox, GeographicCoordinates, JulianCentury, JulianDay, RiseTransitSet } from '../types';

export declare function getMeanLongitudeReferredToMeanEquinoxOfDate(T: JulianCentury): Degree;
export declare function getGeometricEclipticLongitude(jd: JulianDay): Degree;
export declare function getGeocentricEclipticLongitude(jd: JulianDay, equinox?: Equinox): Degree;
export declare function getGeocentricEclipticLatitude(jd: JulianDay, equinox?: Equinox): Degree;
export declare function getGeometricFK5EclipticLongitude(jd: JulianDay, equinox?: Equinox): Degree;
export declare function getGeometricFK5EclipticLatitude(jd: JulianDay, equinox?: Equinox): Degree;
export declare function getGeocentricEclipticCoordinates(jd: JulianDay, equinox?: Equinox): EclipticCoordinates;
export declare function getGeocentricEquatorialCoordinates(jd: JulianDay, equinox?: Equinox): EquatorialCoordinates;
export declare function getApparentGeocentricEclipticLongitude(jd: JulianDay): Degree;
export declare function getApparentGeocentricEclipticLatitude(jd: JulianDay): Degree;
export declare function getApparentGeocentricEclipticCoordinates(jd: JulianDay): EclipticCoordinates;
export declare function getApparentGeocentricEquatorialCoordinates(jd: JulianDay): EquatorialCoordinates;
export declare function getVariationGeometricEclipticLongitude(jd: JulianDay): Degree;
export declare function getRiseTransitSet(jd: JulianDay, geoCoords: GeographicCoordinates): RiseTransitSet;
//# sourceMappingURL=coordinates.d.ts.map